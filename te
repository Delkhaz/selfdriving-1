[0;31mSignature:[0m [0mblob_doh[0m[0;34m([0m[0mimage[0m[0;34m,[0m [0mmin_sigma[0m[0;34m=[0m[0;36m1[0m[0;34m,[0m [0mmax_sigma[0m[0;34m=[0m[0;36m30[0m[0;34m,[0m [0mnum_sigma[0m[0;34m=[0m[0;36m10[0m[0;34m,[0m [0mthreshold[0m[0;34m=[0m[0;36m0.01[0m[0;34m,[0m [0moverlap[0m[0;34m=[0m[0;36m0.5[0m[0;34m,[0m [0mlog_scale[0m[0;34m=[0m[0;32mFalse[0m[0;34m)[0m[0;34m[0m[0m
[0;31mDocstring:[0m
Finds blobs in the given grayscale image.

Blobs are found using the Determinant of Hessian method [1]_. For each blob
found, the method returns its coordinates and the standard deviation
of the Gaussian Kernel used for the Hessian matrix whose determinant
detected the blob. Determinant of Hessians is approximated using [2]_.

Parameters
----------
image : ndarray
    Input grayscale image.Blobs can either be light on dark or vice versa.
min_sigma : float, optional
    The minimum standard deviation for Gaussian Kernel used to compute
    Hessian matrix. Keep this low to detect smaller blobs.
max_sigma : float, optional
    The maximum standard deviation for Gaussian Kernel used to compute
    Hessian matrix. Keep this high to detect larger blobs.
num_sigma : int, optional
    The number of intermediate values of standard deviations to consider
    between `min_sigma` and `max_sigma`.
threshold : float, optional.
    The absolute lower bound for scale space maxima. Local maxima smaller
    than thresh are ignored. Reduce this to detect less prominent blobs.
overlap : float, optional
    A value between 0 and 1. If the area of two blobs overlaps by a
    fraction greater than `threshold`, the smaller blob is eliminated.
log_scale : bool, optional
    If set intermediate values of standard deviations are interpolated
    using a logarithmic scale to the base `10`. If not, linear
    interpolation is used.

Returns
-------
A : (n, 3) ndarray
    A 2d array with each row representing 3 values, ``(y,x,sigma)``
    where ``(y,x)`` are coordinates of the blob and ``sigma`` is the
    standard deviation of the Gaussian kernel of the Hessian Matrix whose
    determinant detected the blob.

References
----------
.. [1] http://en.wikipedia.org/wiki/Blob_detection#The_determinant_of_the_Hessian

.. [2] Herbert Bay, Andreas Ess, Tinne Tuytelaars, Luc Van Gool,
       "SURF: Speeded Up Robust Features"
       ftp://ftp.vision.ee.ethz.ch/publications/articles/eth_biwi_00517.pdf

Examples
--------
>>> from skimage import data, feature
>>> img = data.coins()
>>> feature.blob_doh(img)
array([[ 270.        ,  363.        ,   30.        ],
       [ 265.        ,  113.        ,   23.55555556],
       [ 262.        ,  243.        ,   23.55555556],
       [ 260.        ,  173.        ,   30.        ],
       [ 197.        ,  153.        ,   20.33333333],
       [ 197.        ,   44.        ,   20.33333333],
       [ 195.        ,  100.        ,   23.55555556],
       [ 193.        ,  275.        ,   23.55555556],
       [ 192.        ,  212.        ,   23.55555556],
       [ 185.        ,  348.        ,   30.        ],
       [ 156.        ,  302.        ,   30.        ],
       [ 126.        ,  153.        ,   20.33333333],
       [ 126.        ,  101.        ,   20.33333333],
       [ 124.        ,  336.        ,   20.33333333],
       [ 123.        ,  205.        ,   20.33333333],
       [ 123.        ,   44.        ,   23.55555556],
       [ 121.        ,  271.        ,   30.        ]])

Notes
-----
The radius of each blob is approximately `sigma`.
Computation of Determinant of Hessians is independent of the standard
deviation. Therefore detecting larger blobs won't take more time. In
methods line :py:meth:`blob_dog` and :py:meth:`blob_log` the computation
of Gaussians for larger `sigma` takes more time. The downside is that
this method can't be used for detecting blobs of radius less than `3px`
due to the box filters used in the approximation of Hessian Determinant.
[0;31mFile:[0m      /usr/lib/python3.6/site-packages/skimage/feature/blob.py
[0;31mType:[0m      function
